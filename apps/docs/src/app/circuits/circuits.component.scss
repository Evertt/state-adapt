@import '../../../../../styles/theme';

$diagram-color: map-get($carbon--theme, ui-04);
$source-pulse-color: map-get($carbon--theme, accent-01);
$adapter-color: map-get($carbon--theme, interactive-01);
$sink-pulse-color: map-get($carbon--theme, accent-02);
$diagram-opacity: 0.4;

@mixin child-left-top($cq, $child, $left, $right) {
  &:nth-child(#{$child}) {
    left: $cq * $left;
    top: $cq * $right;
  }
}

@mixin circuit-styles($base-width) {
  $circuit-width: 1.5 * $base-width;
  $circuit-quad: $circuit-width * 6 / 14;
  .circuit {
    position: absolute;
    width: 1.5 * $base-width;
    height: 2 * $circuit-quad;
    @include child-left-top($circuit-quad, 1, 0.5, -1.25);
    @include child-left-top($circuit-quad, 2, -0.5, 0.25);
    @include child-left-top($circuit-quad, 3, 3.6, 1.4);
    @include child-left-top($circuit-quad, 4, 0.9, 3);
    @include child-left-top($circuit-quad, 5, -0.75, 6.5);
    @include child-left-top($circuit-quad, 6, 3.6, 5);
    @include child-left-top($circuit-quad, 7, 6, 3);
    @include child-left-top($circuit-quad, 8, 8.4, 4);
    @include child-left-top($circuit-quad, 9, 5.05, 1);
    @include child-left-top($circuit-quad, 10, 6.5, -0.85);
    @include child-left-top($circuit-quad, 11, 9.9, -0.25);
    @include child-left-top($circuit-quad, 12, 14.2, 0.75);
    @include child-left-top($circuit-quad, 13, 12, 2);
    @include child-left-top($circuit-quad, 14, 13.2, 3);
    @include child-left-top($circuit-quad, 15, 15.6, 5.75);
    @include child-left-top($circuit-quad, 16, 18, 3.5);
    @include child-left-top($circuit-quad, 17, 22, 2);
    @include child-left-top($circuit-quad, 18, 21, 6);
    @include child-left-top($circuit-quad, 19, 20.2, 1);
    @include child-left-top($circuit-quad, 20, 17, 4.75);
    @include child-left-top($circuit-quad, 21, 17.5, -0.25);
    @include child-left-top($circuit-quad, 22, 18.5, 1.75);

    stroke: $diagram-color;
    fill: none;
    .adapter {
      stroke-width: 6px;
      opacity: $diagram-opacity + 0.2;
      transform: translate(360px, 0) rotate(30deg);
      transform-origin: 60px 360px;
    }
  }
}

@include circuit-styles($base-width: 150px);

.clock {
  .clock-circle {
    stroke-width: 5px;
    fill: none;
  }
  .hand {
    stroke-width: 3px;
  }
}
.http,
.websocket,
.clock,
.html,
.storage {
  fill: $diagram-color;
  opacity: $diagram-opacity;
}
.connector path {
  stroke: $diagram-color;
  fill: none;
  stroke-width: 3;
  opacity: $diagram-opacity;
  transition: stroke 2s linear all;
}
$pulse-width: 450;
.connector-pulse path {
  transform: translateZ(0); // 3d moves work to GPU
  stroke: $source-pulse-color;
  fill: none;
  stroke-width: 8;
  stroke-dasharray: $pulse-width;
  stroke-dashoffset: $pulse-width;
  &.active {
    animation: dash 0.4s linear;
  }
}
.sink .connector-pulse path {
  stroke: $sink-pulse-color;
  stroke-dashoffset: -$pulse-width;
  &.active {
    animation: dash 0.4s linear reverse;
  }
}
@keyframes dash {
  0% {
    stroke-dashoffset: $pulse-width;
  }
  100% {
    stroke-dashoffset: -$pulse-width;
  }
}
path {
  stroke-width: var(--stroke-width);
}
.adapter.active {
  --stroke-width: 8;
  stroke: $adapter-color;
  opacity: 1 !important;
  transition: transform 0.2s ease-out;
  transform: translate(360px, 0) rotate(90deg) !important;
}
